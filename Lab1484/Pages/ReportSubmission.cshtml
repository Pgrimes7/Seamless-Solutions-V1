@page
@model Lab1484.Pages.ReportSubmissionModel
@using Lab1484.Pages.DataClasses
@using System.Text.Json

@{
    ViewData["Title"] = "Create Report";
}
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Report Submission</title>

    <!-- LOAD BOOTSTRAP CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="~/css/style.css" rel="stylesheet">

    <!-- LOAD BOOTSTRAP JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</head>
<body>
    <div class="container mt-4">
        <h1 class="mb-4">Reports</h1>

        @if (Model.ProgReportSuccess != null)
        {
            <div id="success-alert" class="alert alert-success alert-dismissible fade show" role="alert">
                @Model.ProgReportSuccess
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (Model.ProgReportFailure != null)
        {
            <div id="failure-alert" class="alert alert-danger alert-dismissible fade show" role="alert">
                @Model.ProgReportFailure
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (Model.PerformReportSuccess != null)
        {
            <div id="success-alert" class="alert alert-success alert-dismissible fade show" role="alert">
                @Model.PerformReportSuccess
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (Model.PerformReportFailure != null)
        {
            <div id="failure-alert" class="alert alert-danger alert-dismissible fade show" role="alert">
                @Model.PerformReportFailure
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }





        @if (Model.SelectedReportID > 0)
        {
            if (Model.SelectedReportType == "Progress")
            {
            if (Model.SelectedReport == null)
            {
                <p class="text-danger">Selected report not found.</p>
            }
            else
            {
                <!-- Display the selected report's details -->
                    <!--row for breadcrumbs-->
                    <div class="row row-cols-auto my-2 mb-md-0">
                        <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="ReportSubmission">Reports</a></li>
                                <li class="breadcrumb-item"><a href="#">Progress Report</a></li>
                                <li class="breadcrumb-item active" aria-current="page">@Model.SelectedReport.ReportName</li>
                            </ol>
                        </nav>
                    </div>

                <div class="mb-4">
                    <h2>@Model.SelectedReport.ReportName</h2>
                    <br/>
                        <div class="row row-cols-auto">
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead></thead>
                                    <tbody>
                                        <tr>
                                            <th scope="row" class="table-light">Author</th>
                                            <td>@Model.SelectedReport.AuthorName</td>
                                        </tr>
                                        <tr>
                                            <th scope="row" class="table-light">Date Created</th>
                                            <td>@Model.SelectedReport.ReportDate.ToString("MM/dd/yyyy")</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                </div>
                    <hr>
                <!-- Display associated subjects, grants, and projects -->


    int projectIndex = 0; // Separate index for ProjectList
    int grantIndex = 0;   // Separate index for GrantList



    


@for (int i = 0; i < Model.SubjectTitle.Count; i++)
{
    <div class="row row-cols-auto">
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th colspan="2"><h3>@Model.SubjectTitle[i]</h3></th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Display Grant Details -->
                    @if (grantIndex < Model.GrantList.Count)
                    {
                        <tr>
                            <th scope="row">Grant</th>
                            <td>@(Model.GrantList[grantIndex].grantName + " - " + Model.GrantList[grantIndex].businessName)</td>
                        </tr>
                        <tr>
                            <th scope="row">Category</th>
                            <td>@Model.GrantList[grantIndex].category</td>
                        </tr>
                        <tr>
                            <th scope="row">Due</th>
                            <td>@Model.GrantList[grantIndex].dueDate.ToString("MM/dd/yyyy")</td>
                        </tr>
                        <tr>
                            <th scope="row">Status</th>
                            <td>@Model.GrantList[grantIndex].grantStatus</td>
                        </tr>
                        <tr>
                            <th scope="row">Amount</th>
                            <td>@Model.GrantList[grantIndex].amount.ToString("C")</td>
                        </tr>
                        <tr>
                            <th scope="row">Details</th>
                            <td>@Model.SubjectText[i]</td>
                        </tr>
                   
                            grantIndex++; // Increment the grant index
                        
                    }
                        else if (projectIndex < Model.ProjectList.Count)
                    {
                        <tr>
                            <th scope="row">Associated Project</th>
                            <td>@Model.ProjectList[projectIndex].ProjectName</td>
                        </tr>
                        <tr>
                            <th scope="row">Status</th>
                            <td>@Model.ProjectList[projectIndex].ProjectStatus</td>
                        </tr>
                        <tr>
                            <th scope="row">Due Date</th>
                            <td>@Model.ProjectList[projectIndex].DateDue.ToString("MM/dd/yyyy")</td>
                        </tr>
                        <tr>
                            <th scope="row">Date Created</th>
                            <td>@Model.ProjectList[projectIndex].DateCreated?.ToString("MM/dd/yyyy")</td>
                        </tr>
                        <tr>
                            <th scope="row">Date Completed</th>
                            <td>@Model.ProjectList[projectIndex].DateCompleted?.ToString("MM/dd/yyyy")</td>
                        </tr>
                        <tr>
                            <th scope="row">Details</th>
                            <td>@Model.SubjectText[i]</td>
                        </tr>
                        
                            projectIndex++; // Increment the project index
                        
                    }
                </tbody>
            </table>
        </div>
    </div>
}


            
            }
        }
        else if (Model.SelectedReportType == "Performance")
        {
            if (Model.SelectedPerformanceReport == null)
            {
                <p class="text-danger">Selected performance report not found.</p>
            }
            else
            {
                    <!--row for breadcrumbs-->
                    <div class="row row-cols-auto my-2 mb-md-0">
                        <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="ReportSubmission">Reports</a></li>
                                <li class="breadcrumb-item"><a href="#">Performance Report</a></li>
                                <li class="breadcrumb-item active" aria-current="page">@Model.SelectedPerformanceReport.PerformanceReportName</li>
                            </ol>
                        </nav>
                    </div>
                <div class="mb-4">
                    <h2>@Model.SelectedPerformanceReport.PerformanceReportName</h2>
						<br />

                        <!--row for project details-->
                        <div class="row row-cols-auto">
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <colgroup>
                                        <col style="width: 10%;">
                                        <col style="width: 90%;">
                                    </colgroup>
                                    <thead></thead>
                                    <tbody>
                                        <tr>
                                            <th scope="row" class="table-light">Author</th>
                                            <td>@Model.SelectedPerformanceReport.AuthorName</td>
                                        </tr>
                                        <tr>
                                            <th scope="row" class="table-light">Date Created</th>
                                            <td>@Model.SelectedPerformanceReport.CreatedDate</td>
                                        </tr>
                                        <tr>
                                            <th scope="row" class="table-light">Date Range</th>
                                            <td>@Model.SelectedPerformanceReport.StartDate - @Model.SelectedPerformanceReport.EndDate</td>
                                        </tr>
                                        <tr>
                                            <th scope="row" class="table-light">Details</th>
                                            <td>@Model.SelectedPerformanceReport.Description</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <hr>

                        <div class="row">
                            <div class="col">
                                <div class="my-4 text-center">
                                    <h5>Funding</h5>
                                    <p>Funding Goal for @Model.SelectedPerformanceReport.StartDate - @Model.SelectedPerformanceReport.EndDate: $30,000</p>
                                    <div style="max-width: 250px; margin: 0 auto;">
                                        <canvas id="stackedBarChart" width="600" height="400"></canvas>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <div class="my-4 text-center">
                                    <h5>Grant Status Overview</h5>
                                    <div style="max-width: 250px; margin: 0 auto;">
                                        <canvas id="grantDonutChart"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>
            }
        }
        }
        else 
        {
            <!-- Display the list of reports -->
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li  role="presentation">
                    <button class="nav-link active" id="progress-tab" data-bs-toggle="tab" data-bs-target="#progress-tab-pane" type="button" role="tab" aria-controls="progress-tab-pane" aria-selected="true">Progress</button>
                </li>
                <li  role="presentation">
                    <button class="nav-link" id="performance-tab" data-bs-toggle="tab" data-bs-target="#performance-tab-pane" type="button" role="tab" aria-controls="performance-tab-pane" aria-selected="false">Performance</button>
                </li>
            </ul>
            <div class="tab-content" id="myTabContent">
                <!-- Progress Reports Tab -->
                <div class="tab-pane fade show active" id="progress-tab-pane" role="tabpanel" aria-labelledby="progress-tab">
                    <div class="mt-4">
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#progressModal">Create Progress Report</button>
                    </div>
                    <h2>Progress Reports</h2>
                    <table class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Date</th>
                                <th>Author</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var report in Model.ReportList)
                            {
                                <tr>
                                    <td>
                                        <form method="post" asp-page-handler="SelectProgressReport" class="d-inline">
                                            <input type="hidden" name="reportID" value="@report.ReportID" />
                                            <button type="submit" class="btn btn-link p-0">@report.ReportName</button>
                                        </form>
                                    </td>
                                    <td>@report.ReportDate.ToString("MM/dd/yyyy")</td>
                                    <td>@report.AuthorName</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Performance Reports Tab -->
                <div class="tab-pane fade" id="performance-tab-pane" role="tabpanel" aria-labelledby="performance-tab">
                    <div class="mt-4">
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#performanceModal">Create Performance Report</button>
                    </div>
                    <h2>Performance Reports</h2>
                    <table class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Description</th>
                                <th>Start Date</th>
                                <th>End Date</th>
                                <th>Author</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.PerformanceReportList != null && Model.PerformanceReportList.Any())
                            {
                                @foreach (var PerformanceReport in Model.PerformanceReportList)
                                {
                                    <tr>
                                        <td>
                                            <form method="post" asp-page-handler="SelectPerformanceReport">
                                                <input type="hidden" name="ReportID" value="@PerformanceReport.ReportID" />
                                                <button type="submit" class="btn btn-link p-0">@PerformanceReport.PerformanceReportName</button>
                                            </form>
                                        </td>
                                        <td>@PerformanceReport.Description</td>
                                        <td>@PerformanceReport.StartDate.ToString("MM/dd/yyyy")</td>
                                        <td>@PerformanceReport.EndDate.ToString("MM/dd/yyyy")</td>
                                        <td>@PerformanceReport.AuthorName</td>
                                    </tr>
                                }

                            }
                            else
                            {
                                <tr>
                                    <td colspan="5" class="text-center">No performance reports available.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

        <!-- Modals -->
        <!-- Progress Report Modal -->
        <div class="modal fade" id="progressModal" tabindex="-1" aria-labelledby="progressModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="progressModalLabel">Create Progress Report</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form method="post" asp-page-handler="ProgressReport">
                            <div class="mb-3">
                                <label for="reportName" class="form-label">Report Title</label>
                                <input type="text" class="form-control" id="reportName" name="ReportName" required />
                            </div>
                            <div class="mb-3">
                                <label for="reportDate" class="form-label">Date</label>
                                <input type="date" class="form-control" id="reportDate" name="ReportDate" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly />
                            </div>
                            <div class="mb-3">
                                <label for="grantProjectSelect" class="form-label">Select Grant or Project</label>
                                <select class="form-select" id="grantProjectSelect" name="SelectedGrantOrProjectID">
                                    <option selected>Choose...</option>
                                    @foreach (var grant in Model.GrantList)
                                    {
                                        <option value="grant-@grant.GrantID">@grant.grantName</option>
                                    }
                                    @foreach (var project in Model.ProjectList)
                                    {
                                        <option value="project-@project.ProjectID">@project.ProjectName</option>
                                    }
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="reportSubject" class="form-label">Subject</label>
                                <input type="text" class="form-control" id="reportSubject" name="SubjectTitle" required />
                            </div>
                            <div class="mb-3">
                                <label for="reportContent" class="form-label">Content</label>
                                <textarea class="form-control" id="reportContent" name="SubjectText" rows="4" required></textarea>
                            </div>
                            <div id="additionalSections"></div>
                            <button type="button" class="btn btn-secondary mb-3" id="addSectionButton" onclick="addSection()">Add Section</button>
                            <div>
                            <button type="submit" class="btn btn-primary">Create Report</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Performance Report Modal -->
        <div class="modal fade" id="performanceModal" tabindex="-1" aria-labelledby="performanceModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="performanceModalLabel">Create Performance Report</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form method="post" asp-page-handler="CreatePerformanceReport">
                            <div class="mb-3">
                                <label for="performanceReportName" class="form-label">Report Name</label>
                                <input type="text" class="form-control" id="performanceReportName" asp-for="PerformanceReport.PerformanceReportName" required />
                            </div>
                            <div class="mb-3">
                                <label for="performanceReportDescription" class="form-label">Description</label>
                                <textarea class="form-control" id="performanceReportDescription" asp-for="PerformanceReport.Description" rows="3" required></textarea>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <label for="performanceStartDate" class="form-label">Start Date</label>
                                    <input type="date" class="form-control" id="performanceStartDate" asp-for="PerformanceReport.StartDate" required />
                                </div>
                                <div class="col">
                                    <label for="performanceEndDate" class="form-label">End Date</label>
                                    <input type="date" class="form-control" id="performanceEndDate" asp-for="PerformanceReport.EndDate" required />
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary mt-3">Create Report</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

    <script>
        window.setTimeout(function () {
            const alertBox = document.getElementById('success-alert');
            if (alertBox) {
                //fade out
                alertBox.classList.remove('show');
                alertBox.classList.add('fade');
                setTimeout(() => alertBox.remove(), 500);
            }
        }, 4000); //4 seconds before starting fade-out
    </script>
    <script>
        window.setTimeout(function () {
            const alertBox = document.getElementById('failure-alert');
            if (alertBox) {
                //fade out
                alertBox.classList.remove('show');
                alertBox.classList.add('fade');
                setTimeout(() => alertBox.remove(), 500);
            }
        }, 4000); //4 seconds before starting fade-out
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const progressButton = document.getElementById('progressModalButton');
            const performanceButton = document.getElementById('performanceModalButton');
            const tabs = document.querySelectorAll('#myTab button');

            tabs.forEach(tab => {
                tab.addEventListener('click', function () {
                    if (this.id === 'home-tab') {
                        progressButton.classList.remove('d-none');
                        performanceButton.classList.add('d-none');
                    } else if (this.id === 'profile-tab') {
                        progressButton.classList.add('d-none');
                        performanceButton.classList.remove('d-none');
                    }
                });
            });
        });

        let sectionCount = 1;

        function addSection() {
            const container = document.getElementById('additionalSections');
            const newSection = `
                <div class="mb-3">
                    <label for="grantProjectSelect${sectionCount}" class="form-label">Select Grant or Project</label>
                    <select class="form-select searchable-select" id="grantProjectSelect${sectionCount}" name="SelectedGrantOrProjectID">
                        <option selected>Choose...</option>
        @foreach (var grant in Model.GrantList)
        {
                                <option value="grant-@grant.GrantID">@grant.grantName</option>
        }
        @foreach (var project in Model.ProjectList)
        {
                                <option value="project-@project.ProjectID">@project.ProjectName</option>
        }
                    </select>
                </div>
                <div class="mb-3">
                    <label for="sectionTitle${sectionCount}" class="form-label">Subject</label>
                    <input type="text" class="form-control" id="sectionTitle${sectionCount}" name="SubjectTitle" placeholder="Enter subject" required>
                </div>
                <div class="mb-3">
                    <label for="sectionContent${sectionCount}" class="form-label">Content</label>
                    <textarea class="form-control" id="sectionContent${sectionCount}" name="SubjectText" rows="4" placeholder="Enter content" required></textarea>
                </div>
            `;
            container.insertAdjacentHTML('beforeend', newSection);
            sectionCount++;
        }

    </script>




  <script>
      document.addEventListener('DOMContentLoaded', function () {
          // Updated data from the server
          const fundingData = @Json.Serialize(Model.SelectedPerformanceReport);

          console.log("Serialized funding data:", fundingData);

          if (fundingData) {
              console.log("Updating chart with new data:", fundingData);

              // Extract funding data
              const fundingReceived = fundingData.Funding;
              const fundingUnawarded = fundingData.UnawardedFunding;

              // Update the chart
              updateChart(fundingReceived, fundingUnawarded);
          }
      });

          function updateChart(fundingReceived, fundingUnawarded) {
        console.log("Updating chart with data:", fundingReceived, fundingUnawarded);

        // Update the chart data
        stackedBarChart.data.datasets[0].data = [fundingReceived];
        stackedBarChart.data.datasets[1].data = [fundingUnawarded];

        console.log("Updated chart data:", stackedBarChart.data.datasets);

        stackedBarChart.update();
    }


      let stackedBarChart;

      document.addEventListener('DOMContentLoaded', function () {
          const ctxBar = document.getElementById('stackedBarChart').getContext('2d');
          stackedBarChart = new Chart(ctxBar, {
              type: 'bar',
              data: {
                  labels: ['Funding Overview'],
                  datasets: [
                      {
                          label: 'Funding Received',
                          data: [0], // Initial data
                          backgroundColor: '#C9E265',
                      },
                      {
                          label: 'Funding Needed to Reach Goal',
                          data: [0], // Initial data
                          backgroundColor: '#B2B2B2',
                      }
                  ]
              },
              options: {
                  responsive: true,
                  indexAxis: 'y',
                  scales: {
                      x: { stacked: true },
                      y: { stacked: true }
                  },
                  plugins: {
                      legend: { position: 'top' }
                  }
              }
          });
      });







    //donut
    const ctx = document.getElementById('grantDonutChart').getContext('2d');
    const grantDonutChart = new Chart(ctx, {
        type: 'doughnut',
        data: {
        labels: ['Awarded', 'Rejected', 'Archived', 'Active'],
        datasets: [{
            label: 'Grants',
            data: [12, 8, 3, 5], // example values
            backgroundColor: [
            '#C9E265',
            '#E85C6F',
            '#B2B2B2',
            '#A3DAF5'
            ],
            borderWidth: 1
        }]
        },
        options: {
        responsive: true,
        maintainAspectRatio: false,
        cutout: '50%',
        plugins: {
            legend: {
            position: 'top',
            align: 'center',
            labels: {
                boxWidth: 12,
                padding: 15
            }
            },
            title: {
            display: false
            }
        },
        layout: {
            padding: 10
        }
        }
    });
</script>

<script src="/docs/5.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script src="https://kit.fontawesome.com/4ccc3672e0.js" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>



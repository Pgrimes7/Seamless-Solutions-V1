CREATE DATABASE Lab2;

USE Lab2;

--Credentials Table
CREATE TABLE Credentials (
	CredentialsID int Identity(1,1) PRIMARY KEY,
	Username nvarchar(200),
	Password nvarchar(200)
);

--Hashed Credentials Table
CREATE TABLE HashedCredentials (
	HashedCredentialsID int Identity(1,1) PRIMARY KEY,
	Username nvarchar(200),
	Password nvarchar(200)
);

--User Table
CREATE TABLE Users (
	UserID INT IDENTITY(1,1) PRIMARY KEY,
	userType INT NOT NULL, --0=Admin, 1=Faculty, 2=Employee, 3=Representative
	firstName NVARCHAR(50),
	lastName NVARCHAR(50),
	email NVARCHAR(50),
	phoneNumber NVARCHAR(20)
);

--Project Table
CREATE TABLE Project (
	ProjectID INT IDENTITY(1,1) PRIMARY KEY,
	ProjectAdminID INT,
	projectStatus NVARCHAR(50),
	dateCreated DATE,
	dateCompleted DATE,
	dueDate DATE,
	ProjectName VARCHAR(50),
	FOREIGN KEY (ProjectAdminID) REFERENCES Users(UserID),
);

--EmployeeProject Table (Made so that multiple employees can be linked to a project)
CREATE TABLE  EmployeeProject(
	ProjectID INT,
	EmployeeID INT,
	PRIMARY KEY (ProjectID, EmployeeID),
	FOREIGN KEY (ProjectID) REFERENCES Project(ProjectID),
	FOREIGN KEY (EmployeeID) REFERENCES Users(UserID)
);

--Tasks Table (For Projects)
CREATE TABLE Tasks (
	TaskID INT IDENTITY(1,1) PRIMARY KEY,
	ProjectID INT,
	taskDescription NVARCHAR(200),
	FOREIGN KEY (ProjectID) REFERENCES Project(ProjectID)
);

--Notes Table (For Projects)
CREATE TABLE Notes (
	NoteID INT IDENTITY(1,1) PRIMARY KEY,
	ProjectID INT,
	noteBody NVARCHAR(200),
	FOREIGN KEY (ProjectID) REFERENCES Project(ProjectID)
);

--BusinessPartner Table (Separate from Users to minimize the amount of permissions they have)
CREATE TABLE BusinessPartner (
	BusinessPartnerID INT IDENTITY(1,1) PRIMARY KEY,
	RepresentativeID INT,
	firstName NVARCHAR(50),
	lastName NVARCHAR(50),
	orgType NVARCHAR(50),
	businessType NVARCHAR(50),
	statusFlag NVARCHAR(50),
	FOREIGN KEY (RepresentativeID) REFERENCES Users(UserID)
);

--MeetingMinutes Table (For BusinessPartners)
CREATE TABLE MeetingMinutes (
	MinutesID INT IDENTITY(1,1) PRIMARY KEY,
	BusinessPartnerID INT,
	minutesBody NVARCHAR(200),
	FOREIGN KEY (BusinessPartnerID) REFERENCES BusinessPartner(BusinessPartnerID)
);

--Grant Table
CREATE TABLE Grants (
	GrantID INT IDENTITY(1,1) PRIMARY KEY,
	FacultyLeadID INT,
	BusinessPartnerID INT,
	businessName NVARCHAR(100),
	category NVARCHAR(50),
	submissionDate DATE,
	awardDate DATE,
	grantStatus NVARCHAR(50),
	amount FLOAT,
	FOREIGN KEY (FacultyLeadID) REFERENCES Users(UserID),
	FOREIGN KEY (BusinessPartnerID) REFERENCES BusinessPartner(BusinessPartnerID)
);

--FacultyGrant Table (Made so that multiple faculty members can be linked to a grant)
CREATE TABLE FacultyGrant (
	GrantID INT,
	FacultyID INT,
	PRIMARY KEY (GrantID, FacultyID),
	FOREIGN KEY (GrantID) REFERENCES Grants(GrantID),
	FOREIGN KEY (FacultyID) REFERENCES Users(UserID)
);




INSERT INTO Credentials (Username, Password) 
VALUES ('smithto','12345'),
	('grobergr','67890'),
	('brownch','24680'),
	('jordanbow','13579'),
	('manbos','54321'),
	('brantjo','09876'),
	('gomberbu','08642'),
	('yangmag','97531');

INSERT INTO Users (userType, firstName, lastName, email, phoneNumber) 
VALUES (0, 'Todd', 'Smith', 'Todd.smith@example.com', '123-456-7890'),
       (1, 'Grant', 'Gorber', 'Grant.Gorber@example.com', '234-567-8901'),
       (2, 'Charlie', 'Brown', 'charlie.brown@example.com', '345-678-9012'),
       (3, 'Bowwow', 'Jordan', 'Bowow@example.com', '456-789-0123'),
	   (0, 'Boss', 'Man', 'BossMan@example.com', '123-456-7890'),
       (1, 'Johnson', 'Brant', 'Grahhh@example.com', '234-567-8901'),
       (2, 'Bulh', 'Gomber', 'Gomber@example.com', '345-678-9012'),
       (3, 'Magnus', 'Yang', 'Bowow@example.com', '456-789-0123');
INSERT INTO Project (ProjectAdminID, projectStatus, dateCreated, dateCompleted, dueDate, ProjectName) 
VALUES (1, 'In Progress', '2025-01-01', '2000-10-10', '2025-12-31', 'Cancer Research'),
       (2, 'Completed', '2024-01-01', '2024-12-31', '2024-12-31', 'Project LeBron');
	   
INSERT INTO EmployeeProject (ProjectID, EmployeeID) 
VALUES (1, 2),
       (1, 3),
       (2, 2);

INSERT INTO Tasks (ProjectID, taskDescription) 
VALUES (1, 'Task 1 '),
       (1, 'Task 2 '),
       (2, 'Task 1');

INSERT INTO Notes (ProjectID, noteBody) 
VALUES (1, 'Note 1'),
       (1, 'Note 2 '),
       (2, 'Note 1 ');

INSERT INTO BusinessPartner (RepresentativeID, firstName, lastName, orgType, businessType, statusFlag) 
VALUES (3, 'LeBron', 'James', 'Sports', 'Athletics', 'Active'),
       (4, 'Bob', 'Jordan', 'For-Profit', 'Technology', 'Inactive');

INSERT INTO MeetingMinutes (BusinessPartnerID, minutesBody) 
VALUES (1, 'Meeting minutes ex'),
       (2, 'Meeting minutes ex');

INSERT INTO Grants (FacultyLeadID, BusinessPartnerID, businessName, category, submissionDate, awardDate, grantStatus, amount) 
VALUES (1, 1, 'Business A', 'Research', '2025-01-15', '2025-02-15', 'Approved', 50000.00),
       (2, 2, 'Business B', 'Development', '2025-03-01', '2025-04-01', 'Pending', 75000.00);

INSERT INTO FacultyGrant (GrantID, FacultyID) 
VALUES (1, 1),
       (1, 2),
       (2, 1);



UPDATE Credentials
SET Username = 'gorbergr'
WHERE Username = 'grobergr';

ALTER TABLE Credentials
ADD UserID INT;

ALTER TABLE Credentials
ADD CONSTRAINT FK_Credentials_Users FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE;

UPDATE Credentials
SET UserID = 1
WHERE Username = 'smithto';
UPDATE Credentials
SET UserID = 2
WHERE Username = 'gorbergr';
UPDATE Credentials
SET UserID = 3
WHERE Username = 'brownch';
UPDATE Credentials
SET UserID = 4
WHERE Username = 'jordanbow';
UPDATE Credentials
SET UserID = 5
WHERE Username = 'manbos';
UPDATE Credentials
SET UserID = 6
WHERE Username = 'brantjo';
UPDATE Credentials
SET UserID = 7
WHERE Username = 'gomberbu';
UPDATE Credentials
SET UserID = 8
WHERE Username = 'yangmag';

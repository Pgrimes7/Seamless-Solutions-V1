CREATE DATABASE Lab3;
USE Lab3;

--User Table
CREATE TABLE Users (
	UserID INT IDENTITY(1,1) PRIMARY KEY,
	userType INT NOT NULL, -- 0=Admin, 1=Faculty, 2=Employee, 3=Representative
	firstName NVARCHAR(50) NOT NULL,
	lastName NVARCHAR(50) NOT NULL,
	email NVARCHAR(50),
	phoneNumber NVARCHAR(20),
	ProfileImageFileName NVARCHAR(255) NULL
);

--Project Table
CREATE TABLE Project (
	ProjectID INT IDENTITY(1,1) PRIMARY KEY,
	ProjectAdminID INT,
	projectStatus NVARCHAR(50),
	dateCreated DATE,
	dateCompleted DATE,
	dueDate DATE,
	ProjectName NVARCHAR(50),
	FOREIGN KEY (ProjectAdminID) REFERENCES Users(UserID)
);

--EmployeeProject Table
CREATE TABLE EmployeeProject (
	ProjectID INT,
	EmployeeID INT,
	PRIMARY KEY (ProjectID, EmployeeID),
	FOREIGN KEY (ProjectID) REFERENCES Project(ProjectID),
	FOREIGN KEY (EmployeeID) REFERENCES Users(UserID)
);

--Project Tasks Table
CREATE TABLE ProjTasks (
	TaskID INT IDENTITY(1,1) PRIMARY KEY,
	ProjectID INT,
	UserID INT,
	taskDescription NVARCHAR(200),
	dueDate DATE,
	PTStatus VARCHAR(20) NOT NULL DEFAULT ('Incomplete'),
	FOREIGN KEY (ProjectID) REFERENCES Project(ProjectID),
	FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

--Grant Tasks Table
CREATE TABLE GrantTasks (
	GTaskID INT IDENTITY(1,1) PRIMARY KEY,
	GrantID INT,
	UserID INT,
	taskDescription NVARCHAR(200),
	dueDate DATE,
	GTStatus VARCHAR(20) NOT NULL DEFAULT ('Incomplete'),
	FOREIGN KEY (GrantID) REFERENCES Grants(GrantID),
	FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

--Notes Table
CREATE TABLE Notes (
	NoteID INT IDENTITY(1,1) PRIMARY KEY,
	ProjectID INT,
	noteBody NVARCHAR(200),
	FOREIGN KEY (ProjectID) REFERENCES Project(ProjectID)
);

--BusinessPartner Table
CREATE TABLE BusinessPartner (
	BusinessPartnerID INT IDENTITY(1,1) PRIMARY KEY,
	RepresentativeID INT,
	firstName NVARCHAR(50) NOT NULL,
	lastName NVARCHAR(50) NOT NULL,
	orgType NVARCHAR(50),
	businessType NVARCHAR(50),
	statusFlag NVARCHAR(50),
	FOREIGN KEY (RepresentativeID) REFERENCES Users(UserID)
);

--MeetingMinutes Table
CREATE TABLE MeetingMinutes (
	MinutesID INT IDENTITY(1,1) PRIMARY KEY,
	BusinessPartnerID INT,
	minutesBody NVARCHAR(200),
	FOREIGN KEY (BusinessPartnerID) REFERENCES BusinessPartner(BusinessPartnerID)
);

--Grants Table
CREATE TABLE Grants (
	GrantID INT IDENTITY(1,1) PRIMARY KEY,
	FacultyLeadID INT,
	BusinessPartnerID INT,
	businessName NVARCHAR(100),
	category NVARCHAR(50),
	submissionDate DATE,
	awardDate DATE,
	grantStatus NVARCHAR(50),
	amount FLOAT,
	dueDate DATE,
	grantName NVARCHAR(100),
	FOREIGN KEY (FacultyLeadID) REFERENCES Users(UserID),
	FOREIGN KEY (BusinessPartnerID) REFERENCES BusinessPartner(BusinessPartnerID)
);

--FacultyGrant Table
CREATE TABLE FacultyGrant (
	GrantID INT,
	FacultyID INT,
	PRIMARY KEY (GrantID, FacultyID),
	FOREIGN KEY (GrantID) REFERENCES Grants(GrantID),
	FOREIGN KEY (FacultyID) REFERENCES Users(UserID)
);

--Messages Table
CREATE TABLE Messages (
	MessageID INT IDENTITY(1,1) PRIMARY KEY,
	Sender NVARCHAR(50) NOT NULL,
	Receiver NVARCHAR(50) NOT NULL,
	Content NVARCHAR(MAX) NOT NULL,
	Timestamp DATETIME DEFAULT GETDATE(),
	IsRead BIT DEFAULT 0
);

--Grant_User Table
CREATE TABLE Grant_User (
	UserID INT REFERENCES Users(UserID),
	GrantID INT REFERENCES Grants(GrantID),
	PRIMARY KEY (UserID, GrantID),
	ViewPermission INT,
	EditPermission INT,
	SensitiveInfoPermission INT
);

CREATE TABLE Reports (
    ReportID INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
    ReportDate DATE,
    ReportName VARCHAR(50)
);






--Users Inserts
INSERT INTO Users (userType, firstName, lastName, email, phoneNumber, ProfileImageFileName) VALUES
(0, 'Todd', 'Smith', 'Todd.smith@example.com', '123-456-7890', NULL),
(1, 'Ben', 'Gorber', 'Grant.Gorber@example.com', '234-567-8901', NULL),
(2, 'Charlie', 'Brown', 'charlie.brown@example.com', '345-678-9012', NULL),
(3, 'Bob', 'Jordan', 'bojo@example.com', '456-789-0123', NULL),
(0, 'Lucas', 'Langley', 'Langley@example.com', '123-456-7890', NULL),
(1, 'Johnson', 'Brant', 'BrantJ@example.com', '234-567-8901', NULL),
(2, 'Blaire', 'Gomber', 'BlaireGomber@example.com', '345-678-9012', NULL),
(3, 'Magnus', 'Yang', 'YangMagnus@example.com', '456-789-0123', NULL),
(0, 'admin', 'test', 'admintest@example.com', '777-888-0000', NULL),
(0, 'Emily', 'Carter', 'carter.emily@example.com', '555-465-7954', 'emily hi-res.png');

--Project Inserts
INSERT INTO Project (ProjectAdminID, projectStatus, dateCreated, dateCompleted, dueDate, ProjectName) VALUES
(1, 'In Progress', '2025-01-01', '2000-10-10', '2025-11-01', 'LENA'),
(2, 'Completed', '2024-01-01', '2024-12-31', '2025-04-24', 'Coaching Framework');

--EmployeeProject Inserts
INSERT INTO EmployeeProject (ProjectID, EmployeeID) VALUES
(1, 2),
(1, 3),
(2, 2);

--Tasks Inserts
INSERT INTO ProjTasks (ProjectID, UserID, taskDescription, dueDate) VALUES
(1, 2, 'Complete form submission', '2025-11-15'),
(1, 4, 'Assign PI', '2025-04-19'),
(2, 8, 'Meet with client', '2025-05-14');

--Grant Tasks Inserts
INSERT INTO GrantTasks (GrantID, UserID, taskDescription, dueDate) VALUES
(1, 2, 'Follow up with client', '2025-11-15'),
(2, 4, 'Review submission', '2025-04-19'),
(3, 8, 'Go to public safety office', '2025-05-14');

-- Insert Notes
INSERT INTO Notes (ProjectID, noteBody) VALUES
(1, 'Note from meeting 3/31'),
(1, 'Faculty meeting notes '),
(2, 'Share Holder notes ');

--BusinessPartner Inserts
INSERT INTO BusinessPartner (RepresentativeID, firstName, lastName, orgType, businessType, statusFlag) VALUES
(3, 'Frank', 'James', 'Non-Profit', 'Research', 'Active'),
(4, 'Bob', 'Jordan', 'For-Profit', 'Learning', 'Inactive');

--MeetingMinutes Inserts
INSERT INTO MeetingMinutes (BusinessPartnerID, minutesBody) VALUES
(1, 'Attended zoom meeting'),
(2, 'Received feed back from faculty');

--Grants Inserts
INSERT INTO Grants (FacultyLeadID, BusinessPartnerID, businessName, category, submissionDate, awardDate, grantStatus, amount, dueDate, grantName) VALUES
(1, 1, 'Learning Agency', 'Foundation', '2025-01-15', '2025-02-15', 'Active', 50000.00, '2025-07-30', 'The Learning Agency'),
(2, 2, 'Federal Agency', 'Federal', '2025-03-01', '2025-04-01', 'Active', 75000.00, '2025-10-15', 'National Science Foundation'),
(1, 1, 'Division of Public Safety', 'State', '2024-03-01', '2024-06-05', 'Archived', 65000.00, '2024-09-06', 'School Safety Grant');


--FacultyGrant Inserts
INSERT INTO FacultyGrant (GrantID, FacultyID) VALUES
(1, 1),
(1, 2),
(2, 1);

--Messages Inserts
INSERT INTO Messages (Sender, Receiver, Content, IsRead) VALUES
('smithto', 'brownch', 'Just wanted to send a reminder about the project"s upcoming due date.', 1),
('brownch', 'smithto', 'Thanks for the reminder!', 0),
('gomberbu', 'smithto', 'Could we look at this later?', 0),
('manbos', 'brownch', 'Reminder of the upcoming due date of the project!', 1),
('brownch', 'manbos', 'Thank you!', 0),
('yangmag', 'gorbergr', 'Are we still able to meet about this tomorrow?', 0);

ALTER TABLE Messages
ADD SenderID INT,
    ReceiverID INT;

ALTER TABLE Messages
ADD CONSTRAINT FK_Sender FOREIGN KEY (SenderID) REFERENCES Users(UserID),
    CONSTRAINT FK_Receiver FOREIGN KEY (ReceiverID) REFERENCES Users(UserID);

ALTER TABLE Messages
ADD AttachmentFileName NVARCHAR(255),
    AttachmentFilePath NVARCHAR(500)
;

CREATE TABLE Publishes (
    PublishID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    DueDate DATE,
    Requirements NVARCHAR(MAX), 
    Authors NVARCHAR(MAX),
    Status NVARCHAR(50),
    ReferenceCount INT
);

CREATE TABLE ReportSubjects (
    SubjectID INT IDENTITY(1,1) PRIMARY KEY,
    ReportID INT,
    SubjectTitle VARCHAR(255),
    SubjectText VARCHAR(MAX),
    GrantID INT NULL,
    ProjectID INT NULL,
    FOREIGN KEY (ReportID) REFERENCES Reports(ReportID),
    FOREIGN KEY (GrantID) REFERENCES Grants(GrantID),
    FOREIGN KEY (ProjectID) REFERENCES Project(ProjectID)
);

ALTER TABLE Reports 
ADD AuthorName varchar(225);

ALTER TABLE Publishes
ADD JournalTitle NVARCHAR(255);

ALTER TABLE Publishes
ADD FileName NVARCHAR(255);

CREATE TABLE PerformanceReport (
    PerformanceReportID INT IDENTITY(1,1) PRIMARY KEY,
    ReportID INT,
    Description VARCHAR(MAX),
    StartDate DATE,
    EndDate DATE,
    Funding FLOAT,
    ProjectsCompleted INT,
    GrantsSubmitted INT,
    ProjectsWIP INT,
PapersPublished INT,
AwardedGrants INT DEFAULT 0,
    ActiveGrants INT DEFAULT 0,
    RejectedGrants INT DEFAULT 0,
    ArchivedGrants INT DEFAULT 0,
PotentialGrantS INT DEFAULT 0,
UnawardedFunding FLOAT,
FOREIGN KEY (ReportID) REFERENCES Reports(ReportID) );



